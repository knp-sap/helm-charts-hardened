{{- $spireServer := index .Values "spire-server" }}
{{- if hasKey . "spire-server" }}
{{-   $spireServer = index . "spire-server" }}
{{- end }}
Installed {{ .Chart.Name }}â€¦
{{- $s := 0 }}
{{- if $spireServer.enabled }}
{{-   $up := $spireServer.unsupportedBuiltInPlugins }}
{{-   $s = add (len $up.keyManager) (len $up.nodeAttestor) (len $up.upstreamAuthority) (len $up.notifier) $s }}
{{- end }}
{{- if (index .Values "spire-agent").enabled }}
{{-   $up := (index .Values "spire-agent").unsupportedBuiltInPlugins }}
{{-   $s = add (len $up.keyManager) (len $up.nodeAttestor) (len $up.svidStore) (len $up.workloadAttestor) $s }}
{{- end }}
{{- if (index .Values "upstream-spire-agent").enabled }}
{{-   $up := (index .Values "upstream-spire-agent").unsupportedBuiltInPlugins }}
{{-   $s = add (len $up.keyManager) (len $up.nodeAttestor) (len $up.svidStore) (len $up.workloadAttestor) $s }}
{{- end }}
{{- if gt $s 0 }}

Warning: You're using an unsupported plugin. Functionality of this release and future upgrades aren't guaranteed to work smoothly.
{{- end }}

{{- if or (eq (($spireServer.experimental).enabled | toString) "true") (eq (((index .Values "spire-agent").experimental).enabled | toString) "true") }}

Warning: You're using an experimental config. Functionality of this release and future upgrades aren't guaranteed to work smoothly.
{{- end }}
{{- if $spireServer.enabled }}
{{-   $className := include "spire-server.controller-manager-class-name" (dict "Values" $spireServer "Release" .Release) }}
{{-   if $spireServer.controllerManager.enabled }}
{{-     if $spireServer.controllerManager.watchClassless }}

Spire CR's will be handled if no className is specified or if className is set to "{{ $className }}"
{{-     else }}

Spire CR's will be handled only if className is set to "{{ $className }}"
{{-     end }}
{{-   end }}
{{- end }}
