{{- $namespace := include "spire-server.namespace" . }}
{{- $serviceAccountName := include "spire-server.serviceAccountName" . }}
{{- $subject := dict "kind" "ServiceAccount" "name" $serviceAccountName "namespace" $namespace }}
{{- include "spire-lib.server-roles" (dict "fullName" (include "spire-server.fullname" .) "releaseNamespace" .Release.Namespace "serviceAccountName" $serviceAccountName "subject" $subject "bundleName" (include "spire-lib.bundle-configmap" .) "bundleNamespace" (include "spire-server.bundle-namespace" .) "k8sPsatEnabled" .Values.nodeAttestor.k8sPsat.enabled) }}
{{- if and .Values.upstreamAuthority.certManager.enabled .Values.upstreamAuthority.certManager.rbac.create }}
---
# Role to be able to manage cert requests with Cert-Manager
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "spire-server.fullname" . }}-cm
  namespace: {{ $namespace }}
rules:
  - apiGroups: ["cert-manager.io"]
    resources:
      - certificaterequests
      - issuers
    verbs:
      - list
      - get
      - create
      - delete
      - patch
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "spire-server.fullname" . }}-cm
  namespace: {{ $namespace }}
subjects:
  - kind: ServiceAccount
    name: {{ include "spire-server.serviceAccountName" . }}
    namespace: {{ $namespace }}
roleRef:
  kind: Role
  name: {{ include "spire-server.fullname" . }}-cm
  apiGroup: rbac.authorization.k8s.io
{{- end }}
